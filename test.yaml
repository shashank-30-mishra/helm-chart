---
# Source: boardgame/templates/sa-role.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-sa
  namespace: argocd
---
# Source: boardgame/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-reader
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
---
# Source: boardgame/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: service-reader-binding
subjects:
  - kind: ServiceAccount
    name: argocd-sa  # ServiceAccount name passed from values.yaml
    namespace: argocd
roleRef:
  kind: ClusterRole
  name: service-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: boardgame/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: argocd
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
    # resourceNames: ["github-token-secret"]  # Secret name passed from values.yaml
---
# Source: boardgame/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding
  namespace: argocd
subjects:
  - kind: ServiceAccount
    name: argocd-sa  # ServiceAccount name passed from values.yaml
    namespace: argocd
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: boardgame/templates/service.yaml
# templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: boardgame-ssvc
spec:
  selector:
    app: boardgame
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: LoadBalancer
---
# Source: boardgame/templates/deployment.yaml
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boardgame-deployment
  labels:
    app: boardgame
spec:
  replicas: 2
  selector:
    matchLabels:
      app: boardgame
  template:
    metadata:
      labels:
        app: boardgame
    spec:
      containers:
        - name: boardgame
          image: "shashank30mishra/boardgame:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            {}
---
# Source: boardgame/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: post-sync-comment
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PostSync
    # argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: argocd-sa
      containers:
      - name: comment-pr
        image: djieno/alpine-curl-kubectl:amd64
        command:
          - /bin/sh
          - -c
          - |
            sleep 500
            PR_NUMBER=4  # Assume the PR number is stored in a ConfigMap or secret
            SERVICE_URL=$(kubectl get svc boardgame-ssvc -n pr-$PR_NUMBER -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

            set +x
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/$GITHUB_REPO/issues/$PR_NUMBER/comments \
                 -d "{\"body\": \"âœ… Sync Completed! ðŸŽ‰\n\nService is available at: [http://$SERVICE_URL](http://$SERVICE_URL)\"}" > /dev/null 2>&1
        env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token-secret
                key: key
          - name: GITHUB_REPO
            value: "shashank-30-mishra/Boardgame"  # Change to your GitHub repo
      restartPolicy: Never
---
# Source: boardgame/templates/ingress.yaml
#
---
# Source: boardgame/templates/namespace.yaml
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: custom-namespace  # This allows for either a custom namespace or the default one
---
# Source: boardgame/templates/sa-role.yaml
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: ingress-reader
#   namespace: default
# rules:
#   - apiGroups: ["networking.k8s.io"]
#     resources: ["ingresses"]
#     verbs: ["get", "list"]
#   - apiGroups: [""]
#     resources: ["services"]
#     verbs: ["get", "list"]



# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: ingress-reader-binding
#   namespace: default
# subjects:
#   - kind: ServiceAccount
#     name: argocd-sa
#     namespace: default
# roleRef:
#   kind: Role
#   name: ingress-reader
#   apiGroup: rbac.authorization.k8s.io
